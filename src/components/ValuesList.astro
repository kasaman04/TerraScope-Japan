---
export interface Props {
  items: {
    icon: string;
    title: string;
    desc: string;
  }[];
}

const { items } = Astro.props;

function getIcon(iconName: string) {
  const icons = {
    Search: `<svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
    </svg>`,
    CheckCircle: `<svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>`,
    Globe: `<svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>`
  };
  return icons[iconName] || icons.Search;
}
---

<div class="grid gap-8 md:grid-cols-3">
  {items.map((item) => (
    <div class="text-center">
      <div class="flex justify-center mb-4">
        <div class="w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center text-primary-600">
          <Fragment set:html={getIcon(item.icon)} />
        </div>
      </div>
      <h3 class="text-xl font-semibold mb-3 text-gray-900">{item.title}</h3>
      <p class="text-gray-600 leading-relaxed">{item.desc}</p>
    </div>
  ))}
</div>