---
export interface Props {
  thumbnail?: string;
  thumbnailUrl?: string;
  src?: string;
  pdfUrl?: string;
  caption?: string;
  title?: string;
  description?: string;
}

const { 
  thumbnail, 
  thumbnailUrl, 
  src, 
  pdfUrl, 
  caption, 
  title, 
  description 
} = Astro.props;

// Support both old and new prop names
const finalThumbnail = thumbnail || thumbnailUrl;
const finalSrc = src || pdfUrl;
const finalCaption = caption || description;
---

<div class="pdf-preview-container">
  {title && (
    <h3 class="text-lg font-semibold mb-2 text-gray-900">{title}</h3>
  )}
  
  <div class="relative inline-block">
    <img 
      src={finalThumbnail} 
      alt="PDF Preview" 
      class="w-64 h-80 object-cover rounded-lg shadow-lg cursor-pointer hover:shadow-xl transition-shadow"
      onclick="openPdfModal()"
      onerror="this.src='https://via.placeholder.com/256x320/f3f4f6/6b7280?text=PDF+Preview'"
    />
    <div class="absolute inset-0 bg-black bg-opacity-0 hover:bg-opacity-20 transition-all duration-300 rounded-lg flex items-center justify-center cursor-pointer" onclick="openPdfModal()">
      <svg class="w-16 h-16 text-white opacity-0 hover:opacity-100 transition-opacity" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
      </svg>
    </div>
  </div>
  
  {finalCaption && (
    <p class="mt-4 text-gray-600 text-center">{finalCaption}</p>
  )}
  
  <div class="mt-4 text-center">
    <a 
      href={finalSrc} 
      download 
      class="btn bg-primary-600 text-white hover:bg-primary-700 mr-4"
    >
      Download PDF
    </a>
    <button 
      onclick="openPdfModal()"
      class="btn border border-primary-600 text-primary-600 hover:bg-primary-50"
    >
      Preview
    </button>
  </div>
</div>

<!-- Modal -->
<dialog id="pdfModal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <h3 class="text-xl font-semibold">PDF Preview</h3>
      <button onclick="closePdfModal()" class="close-btn">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    <div class="modal-body">
      <iframe 
        id="pdfIframe" 
        src="" 
        class="w-full h-96 border-0"
        title="PDF Preview"
      ></iframe>
    </div>
    <div class="modal-footer">
      <a 
        href={finalSrc} 
        download 
        class="btn bg-primary-600 text-white hover:bg-primary-700"
      >
        Download PDF
      </a>
      <button 
        onclick="closePdfModal()" 
        class="btn border border-gray-300 text-gray-700 hover:bg-gray-50"
      >
        Close
      </button>
    </div>
  </div>
</dialog>

<script define:vars={{ finalSrc }}>
  function openPdfModal() {
    const modal = document.getElementById('pdfModal');
    const iframe = document.getElementById('pdfIframe');
    iframe.src = finalSrc;
    modal.showModal();
  }
  
  function closePdfModal() {
    const modal = document.getElementById('pdfModal');
    const iframe = document.getElementById('pdfIframe');
    iframe.src = '';
    modal.close();
  }
  
  // Close modal when clicking outside
  document.getElementById('pdfModal').addEventListener('click', function(e) {
    if (e.target === this) {
      closePdfModal();
    }
  });
</script>

<style>
  .pdf-preview-container {
    max-width: 300px;
    margin: 0 auto;
  }
  
  .modal {
    padding: 0;
    border: none;
    border-radius: 8px;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    max-width: 90vw;
    max-height: 90vh;
    width: 800px;
  }
  
  .modal::backdrop {
    background: rgba(0, 0, 0, 0.5);
  }
  
  .modal-content {
    display: flex;
    flex-direction: column;
    height: 100%;
  }
  
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 1.5rem;
    border-bottom: 1px solid #e5e7eb;
  }
  
  .modal-body {
    flex: 1;
    padding: 1.5rem;
    overflow: auto;
  }
  
  .modal-footer {
    display: flex;
    gap: 0.5rem;
    justify-content: flex-end;
    padding: 1rem 1.5rem;
    border-top: 1px solid #e5e7eb;
  }
  
  .close-btn {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 0.25rem;
    color: #6b7280;
  }
  
  .close-btn:hover {
    background: #f3f4f6;
    color: #374151;
  }
</style>