---
export interface Props {
  rating: number;
  maxRating?: number;
  size?: 'sm' | 'md' | 'lg';
  showRating?: boolean;
}

const { rating, maxRating = 5, size = 'md', showRating = true } = Astro.props;

const sizeClasses = {
  sm: 'w-4 h-4',
  md: 'w-5 h-5',
  lg: 'w-6 h-6'
};

const stars = Array.from({ length: maxRating }, (_, i) => {
  const starNumber = i + 1;
  const isFilled = starNumber <= rating;
  const isHalfFilled = starNumber - 0.5 <= rating && starNumber > rating;
  
  return {
    filled: isFilled,
    halfFilled: isHalfFilled,
    empty: !isFilled && !isHalfFilled
  };
});
---

<div class="flex items-center gap-1">
  <div class="flex items-center">
    {stars.map((star, index) => (
      <div class="relative">
        {star.filled && (
          <svg class={`${sizeClasses[size]} text-yellow-400 fill-current`} viewBox="0 0 24 24">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
        )}
        
        {star.halfFilled && (
          <div class="relative">
            <svg class={`${sizeClasses[size]} text-gray-300 fill-current`} viewBox="0 0 24 24">
              <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
            </svg>
            <div class="absolute inset-0 overflow-hidden" style="width: 50%;">
              <svg class={`${sizeClasses[size]} text-yellow-400 fill-current`} viewBox="0 0 24 24">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
            </div>
          </div>
        )}
        
        {star.empty && (
          <svg class={`${sizeClasses[size]} text-gray-300 fill-current`} viewBox="0 0 24 24">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
        )}
      </div>
    ))}
  </div>
  
  {showRating && (
    <span class="text-sm text-gray-600 ml-1">
      {rating.toFixed(1)} / {maxRating}
    </span>
  )}
</div>