---
export interface Props {
  equipment: Array<{
    name: string;
    type: string;
    description: string;
    image: string;
    specs?: string[];
  }>;
}

const { equipment } = Astro.props;
---

<div class="gear-list">
  <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
    {equipment.map((item) => (
      <div class="gear-card bg-white rounded-xl shadow-md hover:shadow-xl transition-shadow duration-300 overflow-hidden">
        <div class="gear-image">
          <img 
            src={item.image} 
            alt={item.name}
            class="w-full h-48 object-cover"
            loading="lazy"
            onerror="this.src='https://images.unsplash.com/photo-1518837695005-2083093ee35b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80'"
          />
          <div class="gear-type-badge">
            {item.type}
          </div>
        </div>
        
        <div class="gear-content p-6">
          <h3 class="gear-name text-xl font-semibold mb-2 text-gray-900">
            {item.name}
          </h3>
          <p class="gear-description text-gray-600 mb-4 text-sm leading-relaxed">
            {item.description}
          </p>
          
          {item.specs && (
            <div class="gear-specs">
              <h4 class="text-sm font-medium text-gray-900 mb-2">Key Specifications:</h4>
              <ul class="specs-list">
                {item.specs.map((spec) => (
                  <li class="spec-item">
                    <svg class="spec-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    {spec}
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
        
        <div class="gear-footer bg-gray-50 px-6 py-4">
          <div class="flex items-center justify-between">
            <span class="text-sm font-medium text-blue-600">Professional Grade</span>
            <div class="gear-rating">
              {[...Array(5)].map((_, i) => (
                <svg class="star-icon" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" />
                </svg>
              ))}
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
</div>

<style>
  .gear-list {
    animation: fadeInUp 0.8s ease-out;
  }
  
  .gear-card {
    position: relative;
    overflow: hidden;
    border: 1px solid #e5e7eb;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .gear-card:hover {
    transform: translateY(-4px);
  }
  
  .gear-image {
    position: relative;
    overflow: hidden;
  }
  
  .gear-image img {
    transition: transform 0.3s ease;
  }
  
  .gear-card:hover .gear-image img {
    transform: scale(1.05);
  }
  
  .gear-type-badge {
    position: absolute;
    top: 12px;
    right: 12px;
    background: rgba(59, 130, 246, 0.9);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .gear-name {
    color: #1f2937;
    line-height: 1.3;
  }
  
  .gear-description {
    line-height: 1.5;
  }
  
  .specs-list {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }
  
  .spec-item {
    display: flex;
    align-items: center;
    font-size: 13px;
    color: #4b5563;
  }
  
  .spec-icon {
    width: 14px;
    height: 14px;
    margin-right: 8px;
    color: #10b981;
    flex-shrink: 0;
  }
  
  .gear-footer {
    border-top: 1px solid #e5e7eb;
  }
  
  .gear-rating {
    display: flex;
    gap: 2px;
  }
  
  .star-icon {
    width: 16px;
    height: 16px;
    color: #fbbf24;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .gear-list {
      grid-template-columns: 1fr;
    }
    
    .gear-card {
      max-width: 400px;
      margin: 0 auto;
    }
    
    .gear-image {
      height: 200px;
    }
  }
  
  @media (min-width: 1024px) {
    .gear-card:nth-child(3n+1) {
      animation-delay: 0.1s;
    }
    
    .gear-card:nth-child(3n+2) {
      animation-delay: 0.2s;
    }
    
    .gear-card:nth-child(3n+3) {
      animation-delay: 0.3s;
    }
  }
</style>