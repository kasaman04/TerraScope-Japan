---
import BaseLayout from '../../../../layouts/BaseLayout.astro';

const title = "千葉県での暮らし - 市区町村別生活情報";
const description = "千葉県の各市区町村での外国人向け生活情報。千葉市・船橋市・浦安市など成田空港を擁する千葉県の防災、インフラ、生活コストなど詳細情報をお届け。";
const lang = "ja";

// 千葉県の市区町村データ
const chibaCities = {
  chiba: {
    title: "千葉市",
    population: "約98万人",
    foreignPopulation: "約2.8万人（2.9%）",
    features: "県庁所在地・幕張新都心",
    englishHospital: "あり",
    description: "千葉県の中心都市。幕張新都心や千葉港を擁し、国際的なビジネス環境も整っています。",
    image: "https://images.unsplash.com/photo-1590559899731-a382839e5549?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&q=80",
    articles: [
      { title: "🛡️ 防災：地震・水害リスクと避難体制", url: "/ja/blog/chiba/chiba/article-01/" },
      { title: "🏥 生活インフラ：スーパー・病院・学校", url: "/ja/blog/chiba/chiba/article-02/" },
      { title: "💰 生活コスト：家賃・光熱費・交通費など", url: "/ja/blog/chiba/chiba/article-03/" },
      { title: "🏗️ 再開発・公共整備：今後の暮らしやすさ", url: "/ja/blog/chiba/chiba/article-04/" },
      { title: "📜 法制度：外国人の購入制限・手続き", url: "/ja/blog/chiba/chiba/article-05/" },
      { title: "📷 現地調査レポート：映像と写真で見る街", url: "/ja/blog/chiba/chiba/article-06/" }
    ],
    pageUrl: "/ja/blog/chiba/chiba/"
  },
  funabashi: {
    title: "船橋市",
    population: "約64万人",
    foreignPopulation: "約1.5万人（2.3%）",
    features: "東京近郊住宅地",
    englishHospital: "限定的",
    description: "東京都心まで30分圏内の住宅地。商業施設も充実し、利便性の高い生活環境です。",
    image: "https://images.unsplash.com/photo-1624253321171-1be53e12f5f4?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&q=80",
    articles: [
      { title: "🛡️ 防災：地震・水害リスクと避難体制", url: "/ja/blog/chiba/funabashi/article-01/" },
      { title: "🏥 生活インフラ：スーパー・病院・学校", url: "/ja/blog/chiba/funabashi/article-02/" },
      { title: "💰 生活コスト：家賃・光熱費・交通費など", url: "/ja/blog/chiba/funabashi/article-03/" },
      { title: "🏗️ 再開発・公共整備：今後の暮らしやすさ", url: "/ja/blog/chiba/funabashi/article-04/" },
      { title: "📜 法制度：外国人の購入制限・手続き", url: "/ja/blog/chiba/funabashi/article-05/" },
      { title: "📷 現地調査レポート：映像と写真で見る街", url: "/ja/blog/chiba/funabashi/article-06/" }
    ],
    pageUrl: "/ja/blog/chiba/funabashi/"
  },
  urayasu: {
    title: "浦安市",
    population: "約17万人",
    foreignPopulation: "約4,800人（2.8%）",
    features: "東京ディズニーリゾート",
    englishHospital: "あり",
    description: "東京ディズニーリゾートで有名。東京都心へのアクセスも良好で、国際的な住環境が整っています。",
    image: "https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&q=80",
    articles: [
      { title: "🛡️ 防災：地震・水害リスクと避難体制", url: "/ja/blog/chiba/urayasu/article-01/" },
      { title: "🏥 生活インフラ：スーパー・病院・学校", url: "/ja/blog/chiba/urayasu/article-02/" },
      { title: "💰 生活コスト：家賃・光熱費・交通費など", url: "/ja/blog/chiba/urayasu/article-03/" },
      { title: "🏗️ 再開発・公共整備：今後の暮らしやすさ", url: "/ja/blog/chiba/urayasu/article-04/" },
      { title: "📜 法制度：外国人の購入制限・手続き", url: "/ja/blog/chiba/urayasu/article-05/" },
      { title: "📷 現地調査レポート：映像と写真で見る街", url: "/ja/blog/chiba/urayasu/article-06/" }
    ],
    pageUrl: "/ja/blog/chiba/urayasu/"
  }
};
---

<BaseLayout {title} {description} {lang}>
  <!-- Breadcrumb -->
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
    <ol class="flex items-center space-x-2 text-sm text-gray-600">
      <li><a href="/ja/" class="hover:text-blue-600">ホーム</a></li>
      <li><span class="mx-2">/</span></li>
      <li><a href="/ja/blog/" class="hover:text-blue-600">地域別生活情報</a></li>
      <li><span class="mx-2">/</span></li>
      <li class="text-gray-900 font-medium">千葉県</li>
    </ol>
  </nav>

  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-green-800 to-teal-900 overflow-hidden">
    <div class="absolute inset-0 opacity-20">
      <img 
        src="https://images.unsplash.com/photo-1590559899731-a382839e5549?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&q=80"
        alt="千葉県の街並み"
        class="w-full h-full object-cover"
      />
    </div>
    
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 lg:py-24 text-white">
      <div class="max-w-3xl">
        <div class="mb-6">
          <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold bg-white/20 backdrop-blur-sm border border-white/30">
            🗾 千葉県
          </span>
        </div>
        
        <h1 class="text-4xl md:text-5xl font-bold mb-6">
          千葉県での暮らし
        </h1>
        
        <p class="text-xl md:text-2xl mb-8 opacity-95">
          成田空港と東京ディズニーリゾートを擁する国際的な千葉県
        </p>
        
        <div class="grid md:grid-cols-3 gap-6 text-sm">
          <div class="bg-white/10 backdrop-blur-sm rounded-lg p-4">
            <p class="font-semibold mb-1">人口</p>
            <p class="text-lg">約628万人</p>
          </div>
          <div class="bg-white/10 backdrop-blur-sm rounded-lg p-4">
            <p class="font-semibold mb-1">外国人人口</p>
            <p class="text-lg">約18万人（2.9%）</p>
          </div>
          <div class="bg-white/10 backdrop-blur-sm rounded-lg p-4">
            <p class="font-semibold mb-1">市町村</p>
            <p class="text-lg">54自治体</p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- City Selection -->
  <section class="py-16 lg:py-24 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
          市区町村を選んで<span class="text-green-600">詳しい情報を見る</span>
        </h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          下記の市区町村をクリックして、詳細な生活情報をご覧ください
        </p>
      </div>

      <!-- Cities Cards -->
      <div>
        <h3 class="text-2xl font-bold text-gray-900 mb-8 text-center">主要な市区町村</h3>
        <div class="grid md:grid-cols-3 gap-6">
          {Object.entries(chibaCities).map(([key, city]) => (
            <div class="bg-white rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1 cursor-pointer" onclick={`openCityModal('${key}')`}
                 >
              <div class="relative h-48 overflow-hidden">
                <img 
                  src={city.image}
                  alt={city.title}
                  class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                  loading="lazy"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                <div class="absolute bottom-3 left-3 text-white">
                  <h4 class="font-bold text-lg">{city.title}</h4>
                </div>
                <!-- 右上の詳細アイコン -->
                <div class="absolute top-3 right-3 bg-white/20 backdrop-blur-sm rounded-full p-2 hover:bg-white/30 transition-colors">
                  <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                  </svg>
                </div>
              </div>
              <div class="p-4">
                <p class="text-sm text-gray-600 mb-3">{city.features}</p>
                <!-- タグ表示 -->
                <div class="flex gap-2 mb-3">
                  {city.tags && city.tags.slice(0, 2).map(tag => (
                    <span class="text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium">{tag}</span>
                  ))}
                </div>
                <p class="text-xs text-gray-500">{city.population}</p>
              </div>
            </div>
          ))}
        </div>
      </div>



  <!-- モーダル -->
  <div id="city-modal" class="fixed inset-0 bg-black/50 flex items-center justify-center z-50 opacity-0 invisible transition-all duration-300">
    <div class="bg-white rounded-xl w-full max-w-2xl mx-4 p-6 relative max-h-[90vh] overflow-y-auto transform scale-95 transition-transform duration-300">
      <button id="modal-close" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 text-2xl font-bold">&times;</button>

      <img id="modal-image" src="" alt="" class="w-full h-56 object-cover rounded-lg mb-4" />
      
      <h2 id="modal-title" class="text-2xl font-bold mb-2"></h2>
      <p id="modal-features" class="text-gray-600 mb-4"></p>

      <div class="grid grid-cols-2 gap-4 mb-6 text-sm">
        <div class="bg-gray-50 p-3 rounded-lg">
          <strong class="text-gray-700">人口:</strong> 
          <span id="modal-population" class="text-gray-900"></span>
        </div>
        <div class="bg-gray-50 p-3 rounded-lg">
          <strong class="text-gray-700">外国人人口:</strong> 
          <span id="modal-foreign-population" class="text-gray-900"></span>
        </div>
        <div class="bg-gray-50 p-3 rounded-lg">
          <strong class="text-gray-700">英語対応病院:</strong> 
          <span id="modal-english-hospital" class="text-gray-900"></span>
        </div>
        <div class="bg-gray-50 p-3 rounded-lg">
          <strong class="text-gray-700">空港アクセス:</strong> 
          <span id="modal-airport" class="text-gray-900"></span>
        </div>
        <div class="bg-gray-50 p-3 rounded-lg">
          <strong class="text-gray-700">家賃相場:</strong> 
          <span id="modal-rent" class="text-gray-900"></span>
        </div>
        <div class="bg-gray-50 p-3 rounded-lg col-span-2">
          <strong class="text-gray-700">おすすめ:</strong> 
          <span id="modal-recommend" class="text-gray-900"></span>
        </div>
      </div>

      <p id="modal-description" class="text-gray-700 mb-6"></p>

      <div id="modal-tags" class="flex flex-wrap gap-2 mb-6"></div>

      <div class="flex gap-3">
        <a id="modal-article-link" href="#" 
           class="flex-1 text-center bg-blue-600 text-white py-3 px-6 rounded-lg hover:bg-blue-700 transition-colors">
          📖 詳しい記事を読む
        </a>
        <button id="close-modal-btn"
                class="bg-gray-100 text-gray-700 py-3 px-6 rounded-lg hover:bg-gray-200 transition-colors">
          閉じる
        </button>
      </div>
    </div>
  </div>

  <script is:inline>
    // モーダル関連の関数（汎用版）
    // chiba市区町村データ
    // 千葉県市区町村データ
    const cityData = {
      chiba: {
        title: "千葉市",
        population: "約98万人",
        foreignPopulation: "約2.8万人（2.9%）",
        features: "県庁所在地・政令指定都市",
        description: "千葉県の県庁所在地。東京へのアクセスが良く、国際的な住環境が整っています。",
        image: "https://images.unsplash.com/photo-1542051841857-5f90071e7989?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&q=80",
        tags: ["県庁所在地", "政令指定都市", "東京近郊"],
        englishHospital: "あり",
        airport: "◎（成田空港近接）",
        rent: "中程度",
        recommend: "東京近郊に住みたい外国人",
        pageUrl: "/ja/blog/chiba/chiba/"
      },
      funabashi: {
        title: "船橋市",
        population: "約64万人",
        foreignPopulation: "約1.8万人（2.8%）",
        features: "人口県内2位・商業都市",
        description: "千葉県で人口第2位の都市。商業施設が充実し、東京への通勤にも便利な立地です。",
        image: "https://images.unsplash.com/photo-1560347876-cbc37d7be9f9?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&q=80",
        tags: ["商業都市", "東京通勤", "人口多い"],
        englishHospital: "あり",
        airport: "○（成田空港へ電車で）",
        rent: "中程度",
        recommend: "東京勤務の外国人",
        pageUrl: "/ja/blog/chiba/funabashi/"
      },
      kashiwa: {
        title: "柏市",
        population: "約43万人",
        foreignPopulation: "約1.2万人（2.8%）",
        features: "学園都市・商業地",
        description: "東京大学柏キャンパスがある学園都市。商業地としても発展しています。",
        image: "https://images.unsplash.com/photo-1551698618-1dfe5d97d256?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&q=80",
        tags: ["学園都市", "東大", "商業地"],
        englishHospital: "あり",
        airport: "○（成田空港へ電車で）",
        rent: "中程度",
        recommend: "学術関係の外国人",
        pageUrl: "/ja/blog/chiba/kashiwa/"
      }
    };


    function openCityModal(cityKey) {
      // cityDataが定義されていない場合は何もしない
      if (typeof cityData === 'undefined') {
        console.warn('cityData is not defined');
        return;
      }
      
      const city = cityData[cityKey];
      if (!city) return;

      // モーダル内容を更新
      document.getElementById('modal-image').src = city.image || '';
      document.getElementById('modal-image').alt = city.title;
      document.getElementById('modal-title').textContent = city.title;
      document.getElementById('modal-features').textContent = city.features;
      document.getElementById('modal-population').textContent = city.population;
      document.getElementById('modal-foreign-population').textContent = city.foreignPopulation;
      document.getElementById('modal-english-hospital').textContent = city.englishHospital;
      document.getElementById('modal-airport').textContent = city.airport;
      document.getElementById('modal-rent').textContent = city.rent;
      document.getElementById('modal-recommend').textContent = city.recommend;
      document.getElementById('modal-description').textContent = city.description;
      document.getElementById('modal-article-link').href = city.pageUrl;

      // タグを表示
      const tagsContainer = document.getElementById('modal-tags');
      tagsContainer.innerHTML = '';
      if (city.tags) {
        city.tags.forEach(tag => {
          const tagElement = document.createElement('span');
          tagElement.className = 'text-xs bg-blue-100 text-blue-800 px-3 py-1 rounded-full font-medium';
          tagElement.textContent = tag;
          tagsContainer.appendChild(tagElement);
        });
      }

      // モーダルを表示（アニメーション付き）
      const modal = document.getElementById('city-modal');
      modal.classList.remove('invisible', 'opacity-0');
      modal.classList.add('opacity-100');
      modal.querySelector('.bg-white').classList.remove('scale-95');
      modal.querySelector('.bg-white').classList.add('scale-100');
      document.body.style.overflow = 'hidden';
    }

    // モーダルを閉じる
    function closeModal() {
      const modal = document.getElementById('city-modal');
      modal.classList.add('opacity-0');
      modal.querySelector('.bg-white').classList.add('scale-95');
      modal.querySelector('.bg-white').classList.remove('scale-100');
      
      setTimeout(() => {
        modal.classList.add('invisible');
        document.body.style.overflow = 'auto';
      }, 300);
    }

    // モーダルイベントリスナー
    document.addEventListener('DOMContentLoaded', function() {
      const modal = document.getElementById('city-modal');
      const modalClose = document.getElementById('modal-close');
      const closeModalBtn = document.getElementById('close-modal-btn');

      // 閉じるボタンのイベント
      if (modalClose) modalClose.addEventListener('click', closeModal);
      if (closeModalBtn) closeModalBtn.addEventListener('click', closeModal);

      // モーダル背景クリックで閉じる
      if (modal) {
        modal.addEventListener('click', (e) => {
          if (e.target === modal) {
            closeModal();
          }
        });
      }

      // ESCキーでモーダルを閉じる
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && modal && !modal.classList.contains('invisible')) {
          closeModal();
        }
      });
    });
  </script>

</BaseLayout>
