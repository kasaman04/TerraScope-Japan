// ClaudeCode用の指示書
// 対象URL：https://kasaman04.github.io/ja/blog/[都道府県]/
// モーダル表示で市区町村の詳細を見せるUI（ブログ記事誘導）

//============================
// 📁 ファイル構成（例）
//============================
// /components/CityCard.tsx         → 市区町村カード
// /components/CityModal.tsx        → モーダル表示用
// /data/prefectures/[都道府県].ts → 市区町村データ一覧（YAMLやJSON可）
// /pages/ja/blog/[都道府県]/index.tsx → 各都道府県ページ本体

//============================
// 🧩 CityCard.tsx（市区町村カード）
//============================
import { useState } from 'react';
import CityModal from './CityModal';

export default function CityCard({ city }) {
  const [open, setOpen] = useState(false);

  return (
    <div className="rounded-xl shadow hover:shadow-lg cursor-pointer" onClick={() => setOpen(true)}>
      <img src={city.image} alt={city.name} className="w-full h-48 object-cover rounded-t-xl" />
      <div className="p-4">
        <h2 className="text-lg font-bold">{city.name}</h2>
        <p className="text-sm text-gray-600">{city.catch}</p>
        <div className="flex gap-2 mt-2">
          {city.tags.slice(0, 3).map(tag => (
            <span className="text-xs bg-gray-100 px-2 py-1 rounded">{tag}</span>
          ))}
        </div>
      </div>

      {open && <CityModal city={city} onClose={() => setOpen(false)} />}
    </div>
  );
}

//============================
// 🧩 CityModal.tsx（モーダル）
//============================
import Link from 'next/link';

export default function CityModal({ city, onClose }) {
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-xl w-full max-w-2xl p-6 relative">
        <button className="absolute top-2 right-2 text-gray-500" onClick={onClose}>✕</button>

        <img src={city.image} alt={city.name} className="w-full h-56 object-cover rounded" />
        <h2 className="text-2xl font-bold mt-4">{city.name}</h2>
        <p className="text-gray-600 mt-1">{city.catch}</p>

        <div className="grid grid-cols-2 gap-4 mt-4 text-sm">
          <div><strong>人口:</strong> {city.population}</div>
          <div><strong>英語対応病院:</strong> {city.englishHospital ? 'あり' : 'なし'}</div>
          <div><strong>空港アクセス:</strong> {city.airport}</div>
          <div><strong>家賃:</strong> {city.rent}</div>
        </div>

        <div className="mt-4">
          <p className="text-xs text-gray-500">この町は「{city.recommend}」におすすめ</p>
        </div>

        <div className="mt-4 text-right">
          <Link href={city.articleUrl}>
            <a className="text-blue-600 hover:underline">▶ 詳しい記事を見る</a>
          </Link>
        </div>
      </div>
    </div>
  );
}

//============================
// 🧾 例データ（/data/prefectures/tokyo.ts）
//============================
export const cities = [
  {
    name: '渋谷区',
    image: '/images/tokyo/shibuya.jpg',
    catch: '国際的な商業・文化の中心地',
    tags: ['交通◎', '英語病院あり', '若者に人気'],
    population: '約23万人',
    englishHospital: true,
    airport: '◎（リムジンバスあり）',
    rent: '高め',
    recommend: '都心に住みたい外国人',
    articleUrl: '/ja/blog/tokyo/shibuya'
  },
  // ...他の市区町村
];
